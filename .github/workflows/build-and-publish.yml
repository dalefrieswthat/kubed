name: Build and Publish

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine

    - name: Build package
      run: python -m build

    - name: List dist contents
      run: ls -la dist/

    - name: Check built packages
      run: python -m twine check dist/*

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Setup Ruby
      if: github.ref == 'refs/heads/main'
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        working-directory: 'docs'

    - name: Setup Node
      if: github.ref == 'refs/heads/main'
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'package.json'

    - name: Build documentation site
      if: github.ref == 'refs/heads/main'
      run: |
        cd docs
        # Install NPM dependencies
        npm install
        
        # Create a simplified _config_ci.yml to bypass PostCSS for the build
        echo "title: Kubed Documentation" > _config_ci.yml
        echo "description: Documentation and cheat sheets for Docker, Kubernetes, Terraform, and Helm" >> _config_ci.yml
        echo "baseurl: \"\"" >> _config_ci.yml
        echo "url: \"https://cmds.daleyarborough.com\"" >> _config_ci.yml
        echo "markdown: kramdown" >> _config_ci.yml
        echo "theme: minima" >> _config_ci.yml
        
        # Run the build using the simplified config
        bundle install
        bundle exec jekyll build --config _config_ci.yml --destination ../site
        
        # Copy static assets manually if needed
        cp -r assets ../site/ || echo "No assets directory"
        
        # Add required files
        touch ../site/.nojekyll
        cp CNAME ../site/ || echo "No CNAME file found"
        echo "Documentation built successfully"
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: site
        branch: gh-pages
        token: ${{ secrets.GITHUB_TOKEN }} 